// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wheel_wise.Data;

#nullable disable

namespace wheel_wise.Migrations
{
    [DbContext(typeof(WheelWiseContext))]
    [Migration("20240410093157_init20CarTypes")]
    partial class init20CarTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarEquipment", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentsId")
                        .HasColumnType("int");

                    b.HasKey("CarId", "EquipmentsId");

                    b.HasIndex("EquipmentsId");

                    b.ToTable("CarEquipment");
                });

            modelBuilder.Entity("wheel_wise.Model.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Highlighted")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Advertisements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            CreatedAt = new DateTime(2024, 4, 10, 11, 31, 56, 540, DateTimeKind.Local).AddTicks(8251),
                            Highlighted = false
                        });
                });

            modelBuilder.Entity("wheel_wise.Model.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("FuelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TransmissionId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarTypeId");

                    b.HasIndex("ColorId");

                    b.HasIndex("FuelTypeId");

                    b.HasIndex("TransmissionId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarTypeId = 1,
                            ColorId = 1,
                            FuelTypeId = 1,
                            Mileage = 15000,
                            Power = 100,
                            Price = 20000m,
                            Status = 1,
                            TransmissionId = 1,
                            Year = 2010
                        },
                        new
                        {
                            Id = 2,
                            CarTypeId = 2,
                            ColorId = 2,
                            FuelTypeId = 2,
                            Mileage = 15000,
                            Power = 100,
                            Price = 20000m,
                            Status = 2,
                            TransmissionId = 2,
                            Year = 2010
                        });
                });

            modelBuilder.Entity("wheel_wise.Model.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Opel",
                            Model = "Astra"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Renault",
                            Model = "Clio"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Ford",
                            Model = "Fiesta"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Toyota",
                            Model = "Corolla"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Volkswagen",
                            Model = "Golf"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "BMW",
                            Model = "3 Series"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Mercedes-Benz",
                            Model = "C-Class"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Audi",
                            Model = "A3"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Honda",
                            Model = "Civic"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Hyundai",
                            Model = "i30"
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Kia",
                            Model = "Rio"
                        },
                        new
                        {
                            Id = 12,
                            Brand = "Mazda",
                            Model = "3"
                        },
                        new
                        {
                            Id = 13,
                            Brand = "Nissan",
                            Model = "Micra"
                        },
                        new
                        {
                            Id = 14,
                            Brand = "Peugeot",
                            Model = "208"
                        },
                        new
                        {
                            Id = 15,
                            Brand = "Subaru",
                            Model = "Impreza"
                        },
                        new
                        {
                            Id = 16,
                            Brand = "Suzuki",
                            Model = "Swift"
                        },
                        new
                        {
                            Id = 17,
                            Brand = "Tesla",
                            Model = "Model 3"
                        },
                        new
                        {
                            Id = 18,
                            Brand = "Volvo",
                            Model = "V40"
                        },
                        new
                        {
                            Id = 19,
                            Brand = "Fiat",
                            Model = "500"
                        },
                        new
                        {
                            Id = 20,
                            Brand = "Skoda",
                            Model = "Octavia"
                        });
                });

            modelBuilder.Entity("wheel_wise.Model.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "White"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Black"
                        });
                });

            modelBuilder.Entity("wheel_wise.Model.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AC",
                            Type = "Technical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SeatHeating",
                            Type = "Comfort"
                        });
                });

            modelBuilder.Entity("wheel_wise.Model.FuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FuelTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Diesel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Petrol"
                        });
                });

            modelBuilder.Entity("wheel_wise.Model.Transmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transmissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manual"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Automatic"
                        });
                });

            modelBuilder.Entity("wheel_wise.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CarEquipment", b =>
                {
                    b.HasOne("wheel_wise.Model.Car", null)
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wheel_wise.Model.Equipment", null)
                        .WithMany()
                        .HasForeignKey("EquipmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wheel_wise.Model.Advertisement", b =>
                {
                    b.HasOne("wheel_wise.Model.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wheel_wise.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("wheel_wise.Model.Car", b =>
                {
                    b.HasOne("wheel_wise.Model.CarType", "CarType")
                        .WithMany()
                        .HasForeignKey("CarTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wheel_wise.Model.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wheel_wise.Model.FuelType", "FuelType")
                        .WithMany()
                        .HasForeignKey("FuelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wheel_wise.Model.Transmission", "Transmission")
                        .WithMany()
                        .HasForeignKey("TransmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarType");

                    b.Navigation("Color");

                    b.Navigation("FuelType");

                    b.Navigation("Transmission");
                });
#pragma warning restore 612, 618
        }
    }
}
